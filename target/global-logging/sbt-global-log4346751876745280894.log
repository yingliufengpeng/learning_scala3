[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.6 (Oracle Corporation Java 15)
[debug]       Load.loadUnit: plugins took 244.3217ms
[debug]       Load.loadUnit: defsScala took 0.7144ms
[debug] [Loading] Scanning directory C:\Users\Abner\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Abner\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 38.5335 ms
[debug]           Load.resolveProject(global-plugins) took 64.9196ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Abner\.sbt\1.0\plugins, plugins: List(<none>))) took 143.1805ms
[debug] [Loading] Done in C:\Users\Abner\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 186.0373ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3906ms
[debug]     Load.loadUnit(file:/C:/Users/Abner/.sbt/1.0/plugins/, ...) took 452.6826ms
[debug]   Load.apply: load took 754.6293ms
[debug]   Load.apply: resolveProjects took 8.7888ms
[debug]   Load.apply: finalTransforms took 100.9059ms
[debug]   Load.apply: config.delegates took 12.0399ms
[debug]   Load.apply: Def.make(settings)... took 3161.0974ms
[debug]   Load.apply: structureIndex took 156.8109ms
[debug]   Load.apply: mkStreams took 2.1894ms
[info] loading global plugins from C:\Users\Abner\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 288984.477ms
[debug]           Load.loadUnit: plugins took 101.6862ms
[debug]           Load.loadUnit: defsScala took 0.0056ms
[debug] [Loading] Scanning directory E:\scala3_repo\scala-3-project-template\project
[debug]             Load.loadUnit: mkEval took 12.7779ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\scala3_repo\scala-3-project-template\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.8413 ms
[info] loading settings for project scala-3-project-template-build from plugins.sbt ...
[debug]               Load.resolveProject(scala-3-project-template-build) took 3.5786ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-3-project-template-build, base: E:\scala3_repo\scala-3-project-template\project, plugins: List(<none>))) took 6.03ms
[debug] [Loading] Done in E:\scala3_repo\scala-3-project-template\project, returning: (scala-3-project-template-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2540.6563ms
[debug]           Load.loadUnit: cleanEvalClasses took 16.1268ms
[debug]         Load.loadUnit(file:/E:/scala3_repo/scala-3-project-template/project/, ...) took 2659.9536ms
[debug]       Load.apply: load took 2661.9262ms
[debug]       Load.apply: resolveProjects took 0.1174ms
[debug]       Load.apply: finalTransforms took 14.9604ms
[debug]       Load.apply: config.delegates took 0.4237ms
[debug]       Load.apply: Def.make(settings)... took 105.6134ms
[debug]       Load.apply: structureIndex took 39.0369ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from E:\scala3_repo\scala-3-project-template\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5886.2194ms
[debug]     Load.loadUnit: defsScala took 0.0063ms
[debug] [Loading] Scanning directory E:\scala3_repo\scala-3-project-template
[debug]       Load.loadUnit: mkEval took 1.3264ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(dotty.tools.sbtplugin.DottyIDEPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(dotty.tools.sbtplugin.DottyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(dotty.tools.sbtplugin.DottyIDEPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(dotty.tools.sbtplugin.DottyPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,dotty.tools.sbtplugin.DottyPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,dotty.tools.sbtplugin.DottyIDEPlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.5854 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 11.9913ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: E:\scala3_repo\scala-3-project-template, plugins: List(<none>))) took 16.3251ms
[debug] [Loading] Done in E:\scala3_repo\scala-3-project-template, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2052.431ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.7575ms
[debug]   Load.loadUnit(file:/E:/scala3_repo/scala-3-project-template/, ...) took 7948.7364ms
[debug] Load.apply: load took 7950.812ms
[debug] Load.apply: resolveProjects took 0.2718ms
[debug] Load.apply: finalTransforms took 21.3155ms
[debug] Load.apply: config.delegates took 0.6501ms
[debug] Load.apply: Def.make(settings)... took 87.8125ms
[debug] Load.apply: structureIndex took 43.0073ms
[debug] Load.apply: mkStreams took 0.0037ms
[info] set current project to scala3-simple (in build file:/E:/scala3_repo/scala-3-project-template/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-4e27210e3fbc717995dd
[info] started sbt server
